---
const { title, link, colorScheme, imageSrc } = Astro.props;

const cardClass = colorScheme ? `${colorScheme}` : "card-default";
---

<div class=`service-card service-card--${cardClass}`>
  <div class="service-card__content">
    <h3 class=`label`>
      {title}
    </h3>
    <a href={link} class="learn-more">
      <div
        class="learn-more__icon learn-more__icon--arrow"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="1em"
          height="1em"
          viewBox="0 0 24 24"
          ><path fill="#fafafa" d="M17.6 18L8 8.4V17H6V5h12v2H9.4l9.6 9.6z"
          ></path></svg
        >
      </div>
      <span> Learn more </span>
    </a>
  </div>
  <div class="service-img">
    <img src={imageSrc} alt="" />
  </div>
</div>

<style>
  .service-card {
    display: flex;
    padding-block: 50px;
    padding-inline: 50px;
    border-radius: 50px;
    border: solid 2px black;
    box-shadow: black 2px 3px;
    gap: 1rem
 }
  .service-card:hover {
    box-shadow: black 2px 6px;
    transition: all 0.2s ease-in-out;
  }
  .service-card--white-green {
    background-color: var(--color-white);
    color: var(--color-black);
  }
  .service-card--white-green .label {
    background-color: var(--color-green);
  }
  .service-card--black-green {
    background-color: var(--color-black);
    color: var(--color-white);
  }
  .service-card--black-green .label {
    background-color: var(--color-green);
    color: var(--color-black);
  }
  .service-card--green-white {
    background-color: var(--color-green);
    color: var(--color-black);
  }
  .service-card--green-white .label {
    background-color: var(--color-white);
  }
  .service-card--black-white {
    background-color: var(--color-black);
    color: var(--color-white);
  }
  .service-card--black-white .label {
    background-color: var(--color-white);
    color: var(--color-black);
  }

  .service-card h3 {
    text-wrap: balance;
  }
  .service-card__content {
    width: 60%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .service-img {
    display: flex;
    width: 40%;
  }
  .service-img img {
    width: 100%;
    height: auto;
    object-fit: contain;
    
  }
  .learn-more {
    font-size: 20px;
    width: fit-content;
    display: flex;
    gap: 15px;
    align-items: center;
  }
  .learn-more__icon {
    transform: rotate(90deg);
    width: fit-content;
    padding: 4px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  :is(.service-card--white-green, .service-card--green-white) .learn-more__icon{
    background-color: var(--color-black);
  }
  
  :is(.service-card--white-green, .service-card--green-white) .learn-more__icon svg {
    filter: brightness(0) saturate(100%) invert(83%) sepia(33%) saturate(698%)
      hue-rotate(36deg) brightness(107%) contrast(101%);
  }
  
  .learn-more__icon--green-black {
    background-color: var(--color-green);
  }
  .learn-more__icon--green-black svg {
    filter: brightness(0) saturate(100%) invert(0%) sepia(7%) saturate(29%)
      hue-rotate(335deg) brightness(104%) contrast(107%);
  }
  .learn-more__icon--green-white {
    background-color: var(--color-green);
  }
  .learn-more__icon--green-white svg {
    filter: brightness(0) saturate(100%) invert(0%) sepia(7%) saturate(29%)
      hue-rotate(335deg) brightness(104%) contrast(107%);
  }
  .learn-more__icon--black-white {
    background-color: var(--color-black);
  }
  .learn-more__icon--green-white svg {
    filter: brightness(0) saturate(100%) invert(94%) sepia(0%) saturate(7474%)
      hue-rotate(115deg) brightness(107%) contrast(107%);
  }
  .learn-more__icon--white-black {
    background-color: var(--color-black);
  }
  .learn-more__icon--white-black svg {
    filter: brightness(0) saturate(100%) invert(0%) sepia(100%) saturate(31%)
      hue-rotate(149deg) brightness(91%) contrast(107%);
  }
</style>
